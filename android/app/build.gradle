plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.protobuf" version "0.9.4"
}
// --
// apply plugin: "com.android.application"
// apply plugin: "kotlin-android"
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
// apply plugin: "com.google.protobuf"

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

// A protobuf version that should exists both with protoc + protoc-gen-lite (compile) and protobuf-javalite
def protocVer = "3.19.6"
// def protocGenerateFilesDir = "$projectDir/src/main/java/protobuf_gen"

// com.android.application + kotlin-android
android {
    namespace = "com.yongf.flutter.packetcaptureflutter"
    compileSdk = flutter.compileSdkVersion
    // ndkVersion = flutter.ndkVersion // Unused for this app?

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.yongf.flutter.packetcaptureflutter"
        minSdkVersion = flutter.minSdkVersion
        // targetSdkVersion = 28
        targetSdkVersion = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"

        // idk what this does, could be from older gradle.
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs "src/main/java", "src/main/kotlin", "$buildDir/generated/source/proto/"
            }
            proto {
                srcDir "src/main/proto"
                // include "**.proto"
            }
        }
    }

    lintOptions {
        disable "InvalidPackage"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

// com.google.profobuf
// [i] https://github.com/google/protobuf-gradle-plugin/blob/master/examples/exampleProject/build.gradle
protobuf {
    // This is apparently where you add this : https://stackoverflow.com/a/52685219
    // generatedFilesBaseDir = protocGenerateFilesDir

    protoc {
        artifact = "com.google.protobuf:protoc:$protocVer"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
    }

    generateProtoTasks {
        // [!!] 'ofSourceSet("main")' ignores OS.android
        all().each { task ->
            task.plugins {
                javalite { }
            }
        }
    }
}

// dev.flutter.flutter-gradle-plugin
flutter {
    source = "../.."
}

dependencies {
    implementation project(":pcf-core")

    implementation group: "com.android.support", name: "appcompat-v7", version: "28.0.0"
   
    // 2 packages of protobuf exists : the protobuf-java and protobuf-javalite (and the other kotlin/whatever versions)
    // (the protobuf-lite is the very deprecated package)
    // implementation "com.google.protobuf:protobuf-lite:3.0.1"
    implementation "com.google.protobuf:protobuf-javalite:$protocVer"
    implementation "com.google.protobuf:protobuf-kotlin-lite:$protocVer"
    // implementation ("com.squareup.retrofit2:converter-protobuf:2.5.0") {
    implementation ("com.squareup.retrofit2:converter-protobuf:2.11.0") {
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }

    // Room (these also require androidx migration)
    // implementation "android.arch.persistence.room:runtime:1.1.1"
    // annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    implementation "androidx.room:room-runtime:2.4.0"
    annotationProcessor "androidx.room:room-compiler:2.4.0"
    implementation "androidx.sqlite:sqlite:2.1.0"

    // --
    // https://stackoverflow.com/questions/52590101/could-not-find-method-testimplementation-for-arguments-junitjunit4-12
    // Newer kotlin fixes this.
    testImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
}

// Has to be appended :/. for the time being, clear it yourself.
// tasks.register("clean", Delete) {
//     delete protocGenerateFilesDir
// }
